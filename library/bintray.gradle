apply plugin: "com.jfrog.bintray"

version = libraryVersion

if (project.hasProperty("kotlin")) { //Kotlin libraries
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka) {

    }
} else if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

task nativesArm64v8aJar(type: Jar, dependsOn: "assembleRelease") {
    archiveClassifier.set('natives-arm64-v8a')
    from files("$project.projectDir/libs/arm64-v8a", "$project.buildDir/intermediates/cmake/release/obj/arm64-v8a")
}

task nativesArmeabiv7aJar(type: Jar, dependsOn: "assembleRelease") {
    archiveClassifier.set('natives-armeabi-v7a')
    from files("$project.rootDir/libs/armeabi-v7a", "$project.buildDir/intermediates/cmake/release/obj/armeabi-v7a")
}

task nativesX86Jar(type: Jar, dependsOn: "assembleRelease") {
    archiveClassifier.set('natives-x86')
    from files("$project.rootDir/libs/x86", "$project.buildDir/intermediates/cmake/release/obj/x86")
}

task nativesX86_64Jar(type: Jar, dependsOn: "assembleRelease") {
    archiveClassifier.set('natives-x86_64')
    from files("$project.rootDir/libs/x86_64", "$project.buildDir/intermediates/cmake/release/obj/x86_64")
}

artifacts {
    archives javadocJar
    archives sourcesJar
    archives nativesArm64v8aJar
    archives nativesArmeabiv7aJar
    archives nativesX86Jar
    archives nativesX86_64Jar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        override = true
        publicDownloadNumbers = true
        publish = true
        version {
            name = this.version
            desc = libraryDescription
            vcsTag = "v$version"
        }
    }
}
bintrayUpload.dependsOn install
